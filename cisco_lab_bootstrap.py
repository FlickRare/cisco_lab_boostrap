from jinja2 import Environment, FileSystemLoader

# This parameter block is applied across every configuration set generated by this script. 
common = {
    "username":"admin",
    "password": "Cisco123!",
    "ip_domain_name": "example.com",
    "mgmt_vlan": "42",
    "trunk_port_range": "g0/0-3,g1/0-1,g2/0-1",
    "subnet_mask": "255.255.255.0"
}

# This block controls the number of configurations created (add or remove lines as needed) and the hostname and IP unique to each device.
hosts = [
    {"hostname": "D1", "ip_address": "192.168.42.2"},
    {"hostname": "D2", "ip_address": "192.168.42.3"},
    {"hostname": "D3", "ip_address": "192.168.42.4"},
    {"hostname": "A1", "ip_address": "192.168.42.5"},
    {"hostname": "A2", "ip_address": "192.168.42.6"},
    {"hostname": "A3", "ip_address": "192.168.42.7"},
    {"hostname": "A4", "ip_address": "192.168.42.8"},
    {"hostname": "A5", "ip_address": "192.168.42.9"},
    {"hostname": "A6", "ip_address": "192.168.42.10"}
]

# Loads up jinja2 with the config template in /templates
environment = Environment(loader=FileSystemLoader("templates/"))
template = environment.get_template("SSH-template.j2")

# Iterate through every host specified above to create a file path, apply it's unique parameters (hostname and ip) along with the common parameters.
for host in hosts:
    FILENAME = f"{host["hostname"]}_boostrap.ios"
    FILEPATH = f"./ready_configs/{FILENAME}"
    host.update(common)
    content = template.render(host)

# With the config object in hand, save it to it's respective filepath in the "ready_configs" folder.
    with open(FILEPATH, mode="w", encoding="utf-8") as boostrap_script:
        boostrap_script.write(content)
        print(f"Generated {host["hostname"]} config.")
